<div>
<a href="/leagues">Create a fantasy league</a><br>
<a href="/fantasy-teams">Manage fantasy teams</a>
</div>

<form id="chooseTeams" action="/matchup" method="post">
<fieldset id="myFieldset">
League: <select name="league" id="changeleague">
	<option disabled selected value> -- select an option -- </option>
	{{#each leagues}}
	<option value="{{id}}">{{name}}</option>
	{{/each}}
	</select>
<br>
Team 1: <select name="team1" id="team1">
    <option disabled selected value> -- Select a league -- </option>
</select>
<br>
Team 2: <select name="team2" id="team2"> 
    <option disabled selected value> -- Select a league -- </option>
</select><br>
<input type="submit" value="Submit" id="mySubmit">
</fieldset>
</form><br>


Team 1
<table class="myTable">
<thead> 
    <th>First name</th> 
    <th>Last name</th> 
    <th>Team</th>
    <th>Position(s)</th>
    <th>PPG</th>
    <th>RPG</th>
    <th>APG</th>
    <th>SPG</th>	
    <th>BPG</th>
    <th>TOPG</th>
    <th>FPPG</th>
</thead> 
<tbody id="table1"> 
    {{#each team1}} 
    <tr> 
	<td style="display:none;">{{playerId}}</td>
        <td>{{fname}}</td> 
        <td>{{lname}}</td> 
        <td>{{team_name}}</td> 
        <td>{{pos}}</td>
	<td></td>
	<td></td>
	<td></td>
	<td></td>
	<td></td>
	<td></td>
	<td></td>
    </tr> 
    {{/each}} 
</tbody> 
</table><br><br>

Team 2
<table class="myTable">
<thead> 
    <th>First name</th> 
    <th>Last name</th> 
    <th>Team</th>
    <th>Position(s)</th>
    <th>PPG</th>
    <th>RPG</th>
    <th>APG</th>
    <th>SPG</th>	
    <th>BPG</th>
    <th>TOPG</th>
    <th>FPPG</th>
</thead> 
<tbody id="table2"> 
    {{#each team2}} 
    <tr> 
	<td style="display:none;">{{playerId}}</td>
        <td>{{fname}}</td> 
        <td>{{lname}}</td> 
        <td>{{team_name}}</td> 
        <td>{{pos}}</td>
	<td></td>
	<td></td>
	<td></td>
	<td></td>
	<td></td>
	<td></td>
	<td></td>
    </tr> 
    {{/each}} 
</tbody> 
</table>

<script type="text/javascript">

var table1 = document.getElementById("table1"); 
var table2 = document.getElementById("table2"); 

var tabary = [table1, table2];


for (var j = 0; j < 2; j++) {

	for (var i = 0; i < tabary[j].rows.length; i++) {
		var row = tabary[j].rows[i];

		(function (i, row) {

		var playerId = row.firstElementChild.innerHTML;

		var req = new XMLHttpRequest(); 
		var url1 = "http://data.nba.net/prod/v1/2017/players/";
		var url2 = "_profile.json"; 
	
		req.open('GET', url1 + playerId + url2, true); 
		req.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded'); 
		req.addEventListener('load', function() {
			if (req.status >= 200 && req.status < 400) {

				var response = JSON.parse(req.responseText); 
				addData(response, i, row); 
				 
			}
			else {
				console.log("Error in request"); 
			} 
		});
		req.send(null); 
		})(i, row);

	}

	addCells(tabary[j].parentNode); 

}
 


function addData(response, i, row) {
	var pid = +response.league.standard.stats.latest.playerId; 
	var ppg = +response.league.standard.stats.latest.ppg; 
	var rpg = +response.league.standard.stats.latest.rpg;
	var apg = +response.league.standard.stats.latest.apg; 
	var spg = +response.league.standard.stats.latest.spg; 
	var bpg = +response.league.standard.stats.latest.bpg;
	var topg = +response.league.standard.stats.latest.topg;  
	var tpm = +response.league.standard.stats.latest.tpm; 
	var gp = +response.league.standard.stats.latest.gamesPlayed;
	tpm = tpm / gp; 
	var dd2 = +response.league.standard.stats.latest.dd2;
	var td3 = +response.league.standard.stats.latest.td3;
	dd2 = dd2 / gp; 
	td3 = td3 / gp; 
	var fppg = ppg + 1.25*rpg + 1.5*apg + 2*spg + 2*bpg - 0.5*topg + 0.5*tpm + 1.5*dd2 + 3 * td3; 
	fppg = Math.round( fppg * 10 ) / 10;


	addText(row, ppg, rpg, apg, spg, bpg, topg, tpm, dd2, td3, fppg); 
					
}

function addText(row, ppg, rpg, apg, spg, bpg, topg, tpm, dd2, td3, fppg, pid) {



row.firstElementChild.nextSibling.nextSibling.nextSibling.nextSibling.nextSibling.nextSibling.nextSibling.nextSibling.nextSibling.nextSibling.innerHTML = ppg; 
	row.firstElementChild.nextSibling.nextSibling.nextSibling.nextSibling.nextSibling.nextSibling.nextSibling.nextSibling.nextSibling.nextSibling.nextSibling.nextSibling.innerHTML = rpg;
	row.firstElementChild.nextSibling.nextSibling.nextSibling.nextSibling.nextSibling.nextSibling.nextSibling.nextSibling.nextSibling.nextSibling.nextSibling.nextSibling.nextSibling.nextSibling.innerHTML = apg;  
	row.firstElementChild.nextSibling.nextSibling.nextSibling.nextSibling.nextSibling.nextSibling.nextSibling.nextSibling.nextSibling.nextSibling.nextSibling.nextSibling.nextSibling.nextSibling.nextSibling.nextSibling.innerHTML = spg;  	
	row.firstElementChild.nextSibling.nextSibling.nextSibling.nextSibling.nextSibling.nextSibling.nextSibling.nextSibling.nextSibling.nextSibling.nextSibling.nextSibling.nextSibling.nextSibling.nextSibling.nextSibling.nextSibling.nextSibling.innerHTML = bpg; 
	row.firstElementChild.nextSibling.nextSibling.nextSibling.nextSibling.nextSibling.nextSibling.nextSibling.nextSibling.nextSibling.nextSibling.nextSibling.nextSibling.nextSibling.nextSibling.nextSibling.nextSibling.nextSibling.nextSibling.nextSibling.nextSibling.innerHTML = topg; 
	row.firstElementChild.nextSibling.nextSibling.nextSibling.nextSibling.nextSibling.nextSibling.nextSibling.nextSibling.nextSibling.nextSibling.nextSibling.nextSibling.nextSibling.nextSibling.nextSibling.nextSibling.nextSibling.nextSibling.nextSibling.nextSibling.nextSibling.nextSibling.innerHTML = fppg; 

var tr = row; 

		for (var i = 0; i < 7; i++) {
			var newtd = document.createElement("td"); 
			tr.appendChild(newtd); 	
			var cb = document.createElement("input"); 
			cb.setAttribute("type", "checkbox"); 
			cb.setAttribute("value", fppg); 
			cb.setAttribute("id", pid); 
			cb.style.display = "none"; 

			cb.addEventListener("change", function () {
				if (document.getElementById("total")) {
					var total = this.parentNode.parentNode.lastChild; 
					var sum = +total.innerText;
					var teamTotal = this.parentNode.parentNode.parentNode.lastChild.lastChild;	
					var teamSum = +this.parentNode.parentNode.parentNode.lastChild.lastChild.innerHTML;

					if (this.checked) {
						sum = sum + +this.value; 
						teamSum = teamSum + +this.value; 
					}
					else {
						sum = sum - +this.value;
						teamSum = teamSum - +this.value; 
					}

					sum = Math.round( sum * 10 ) / 10;
					total.innerText = sum; 
					teamSum = Math.round( teamSum * 10 ) / 10;
					teamTotal.innerText = teamSum; 


				}
			});			
				
			newtd.appendChild(cb); 

		}

		var total = document.createElement("td");	
		total.innerText = "0";
		total.id = "total";  
		tr.appendChild(total); 

		if (!tr.nextSibling.nextSibling.nextSibling) {
			var checkboxes = document.getElementsByTagName("input"); 
			console.log(checkboxes.length); 
			console.log(checkboxes[1]); 	

			for (var i = 1; i < checkboxes.length; i++) {
				checkboxes[i].style.display = "inline"l 
			}
		}

}

function addCells(tbl) {
	var tr = tbl.firstElementChild.firstElementChild;

	var th = document.createElement("th");
	th.innerText = "M"; 
	tr.appendChild(th);  

	var th = document.createElement("th");
	th.innerText = "T"; 
	tr.appendChild(th); 

	var th = document.createElement("th");
	th.innerText = "W"; 
	tr.appendChild(th); 

	var th = document.createElement("th");
	th.innerText = "T"; 
	tr.appendChild(th); 

	var th = document.createElement("th");
	th.innerText = "F"; 
	tr.appendChild(th); 

	var th = document.createElement("th");
	th.innerText = "S"; 
	tr.appendChild(th); 

	var th = document.createElement("th");
	th.innerText = "S"; 
	tr.appendChild(th); 

	var th = document.createElement("th");
	th.innerText = "Total"; 
	tr.appendChild(th); 


	tr = tr.parentNode.nextSibling.nextSibling.firstElementChild; 


	var tbdy = tbl.firstElementChild.nextSibling.nextSibling; 


	var finalRow = document.createElement("tr");  

	for (var i = 0; i < 17; i++) {
		var tmp = document.createElement("td"); 
		finalRow.appendChild(tmp); 	
			
	}

	var totalstr = document.createElement("td"); 
	totalstr.innerText = "Total"; 
	finalRow.appendChild(totalstr); 

	var totalnum = document.createElement("td"); 
	totalnum.innerText = 0; 
	finalRow.appendChild(totalnum); 

	tbdy.appendChild(finalRow); 

	
}

function updateLeagues () {
	
	var changeleague = document.getElementById('changeleague'); 
	changeleague.addEventListener('change', function(event) {

		var req = new XMLHttpRequest(); 
		var id = changeleague.options[changeleague.selectedIndex].value; 

		var parameters = "id="+id; 
		req.open("GET", "/matchup/change?" + parameters, true); 
		req.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded'); 
		req.addEventListener('load', function () {
			if (req.status >= 200 && req.status < 400) {
				var response = JSON.parse(req.responseText); 

				var myFieldset = document.getElementById("myFieldset"); 
				var changeleague = document.getElementById('changeleague'); 

				var team1 = document.getElementById("team1"); 
				var team2 = document.getElementById("team2"); 

				while (team1.firstChild) {
					team1.removeChild(team1.firstChild); 
					team2.removeChild(team2.firstChild); 
				}
					
				for (var i = 0; i < response.options.length; i++) {
					var opt = document.createElement('option'); 
					opt.value = response.options[i].id;
					opt.textContent = response.options[i].name; 
					opt.innerHTML = response.options[i].name; 
					team1.appendChild(opt); 
					
					var opt = document.createElement('option'); 
					opt.value = response.options[i].id;
					opt.textContent = response.options[i].name; 
					opt.innerHTML = response.options[i].name; 
					team2.appendChild(opt); 
					
				}
			}
			else {
				console.log('Error in network request:' + request.responseText); 
			}
		});
	req.send(null); 
	event.preventDefault(); 
	
	}); 

}

updateLeagues(); 

 
</script>




